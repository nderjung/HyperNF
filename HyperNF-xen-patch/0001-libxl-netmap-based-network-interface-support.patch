From d4b4e6d7051f5ec51bde9bc295e4a82a7fb380cb Mon Sep 17 00:00:00 2001
From: Alexander Jung <a.jung@lancs.ac.uk>
Date: Thu, 15 Nov 2018 16:52:10 +0000
Subject: [PATCH] [PATCH 1/7] libxl: netmap based network interface support

---
 tools/libxl/libxl_device.c           |  5 +++++
 tools/libxl/libxl_linux.c            | 13 ++++++++++++-
 tools/libxl/libxl_nic.c              |  3 ++-
 tools/libxl/libxl_types.idl          |  1 +
 tools/libxl/libxl_types_internal.idl |  1 +
 tools/xl/xl_parse.c                  |  2 ++
 6 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/tools/libxl/libxl_device.c b/tools/libxl/libxl_device.c
index a4a8e9a..bdb6d47 100644
--- a/tools/libxl/libxl_device.c
+++ b/tools/libxl/libxl_device.c
@@ -1919,6 +1919,11 @@ void libxl__device_add_async(libxl__egc *egc, uint32_t domid,
     rc = dt->to_device(gc, domid, type, device);
     if (rc) goto out;
 
+    if (type->nictype == LIBXL_NIC_TYPE_NMIF) {
+	device->backend_kind = LIBXL__DEVICE_KIND_NMIF;
+	device->kind         = LIBXL__DEVICE_KIND_NMIF;
+    }
+
     if (aodev->update_json) {
         lock = libxl__lock_domain_userdata(gc, domid);
         if (!lock) {
diff --git a/tools/libxl/libxl_linux.c b/tools/libxl/libxl_linux.c
index 6ef0abc..4890ee1 100644
--- a/tools/libxl/libxl_linux.c
+++ b/tools/libxl/libxl_linux.c
@@ -82,7 +82,13 @@ static char **get_hotplug_env(libxl__gc *gc,
                                                     dev->devid,
                                                     LIBXL_NIC_TYPE_VIF);
             break;
-        default:
+        case LIBXL_NIC_TYPE_NMIF:
+	    env[nr++] = "nmiif";
+	    env[nr++] = (char *) libxl__device_nic_devname(gc, dev->domid,
+			                            dev->deviid,
+						    LIIBXL_NIC_TYPE_VIF);
+        break;
+	default:
             return NULL;
         }
     }
@@ -138,6 +144,11 @@ static int libxl__hotplug_nic(libxl__gc *gc, libxl__device *dev,
         (*args)[nr++] = (char *) libxl__device_action_to_string(action);
         (*args)[nr++] = "type_if=tap";
         (*args)[nr++] = NULL;
+    } else if (nictype == LIBXL_NIC_TYPE_NMIF && num_exec) {
+	(*args)[nr++] = action == LIBXL__DEVICE_ACTION_ADD ? "online" :
+		                                             "offline";
+	(*args)[nr++] = "type_if=nmif";
+	(*args)[nr++] = NULL;
     } else {
         (*args)[nr++] = action == LIBXL__DEVICE_ACTION_ADD ? "online" :
                                                              "offline";
diff --git a/tools/libxl/libxl_nic.c b/tools/libxl/libxl_nic.c
index 01b711b..612760a 100644
--- a/tools/libxl/libxl_nic.c
+++ b/tools/libxl/libxl_nic.c
@@ -104,7 +104,8 @@ static int libxl__device_nic_setdefault(libxl__gc *gc, uint32_t domid,
             LOGD(ERROR, domid,
             "trying to create PV or PVH guest with an emulated interface");
             return ERROR_INVAL;
-        }
+        } else if (nic->nictype == LIBXL_NIC_TYPE_NMIF)
+	    break;
         nic->nictype = LIBXL_NIC_TYPE_VIF;
         break;
     case LIBXL_DOMAIN_TYPE_INVALID:
diff --git a/tools/libxl/libxl_types.idl b/tools/libxl/libxl_types.idl
index 01ec1d1..fe2be80 100644
--- a/tools/libxl/libxl_types.idl
+++ b/tools/libxl/libxl_types.idl
@@ -129,6 +129,7 @@ libxl_nic_type = Enumeration("nic_type", [
     (0, "UNKNOWN"),
     (1, "VIF_IOEMU"),
     (2, "VIF"),
+    (3, "NMIF"),
     ])
 
 libxl_action_on_shutdown = Enumeration("action_on_shutdown", [
diff --git a/tools/libxl/libxl_types_internal.idl b/tools/libxl/libxl_types_internal.idl
index f2ff017..121229b 100644
--- a/tools/libxl/libxl_types_internal.idl
+++ b/tools/libxl/libxl_types_internal.idl
@@ -29,6 +29,7 @@ libxl__device_kind = Enumeration("device_kind", [
     (12, "VDISPL"),
     (13, "VUART"),
     (14, "PVCALLS"),
+    (15, "NMIF"),
     ])
 
 libxl__console_backend = Enumeration("console_backend", [
diff --git a/tools/xl/xl_parse.c b/tools/xl/xl_parse.c
index e6c5448..795b6dd 100644
--- a/tools/xl/xl_parse.c
+++ b/tools/xl/xl_parse.c
@@ -421,6 +421,8 @@ int parse_nic_config(libxl_device_nic *nic, XLU_Config **config, char *token)
     if (MATCH_OPTION("type", token, oparg)) {
         if (!strcmp("vif", oparg)) {
             nic->nictype = LIBXL_NIC_TYPE_VIF;
+	} else if (!strcmp("nmif", oparg)) {
+	    nic->nictype = LIBXL_NIC_TYPE_NMIF;
         } else if (!strcmp("ioemu", oparg)) {
             nic->nictype = LIBXL_NIC_TYPE_VIF_IOEMU;
         } else {
-- 
2.7.4

